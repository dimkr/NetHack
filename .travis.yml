language: c
matrix:
  include:
    - os: linux
      env: DESCR=linux-xenial-gcc-meson
      compiler: gcc
      addons:
        apt:
          packages:
            - python3-pip
            - python3-setuptools
            - python3-wheel
            - ninja-build
            - bison
            - flex
            - pkg-config
            - libncurses5-dev
            - ccache
      script: |
              sudo pip3 install meson
              meson --buildtype=release build
              ninja -C build
              DESTDIR=/tmp/linux-xenial-gcc-meson ninja -C build install
              tar -C /tmp -c linux-xenial-gcc-meson | gzip -9 > linux-xenial-gcc-meson-$TRAVIS_COMMIT.tar.gz
    - os: linux
      env: DESCR=windows-mingw-meson-cross
      compiler: gcc
      addons:
        apt:
          packages:
            - python3-pip
            - python3-setuptools
            - python3-wheel
            - ninja-build
            - bison
            - flex
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
            - wine64-development
            - wine32-development
            - wine-development
            - ccache
      script: |
              sudo pip3 install meson
              meson --cross-file=sys/winnt/winnt.cross --buildtype=release build
              ninja -C build
              DESTDIR=/tmp/windows-mingw-meson-cross ninja -C build install
              tar -C /tmp -c windows-mingw-meson-cross | gzip -9 > windows-mingw-meson-cross-$TRAVIS_COMMIT.tar.gz
    - os: linux
      env: DESCR=msdos-djgpp-meson-cross
      services: docker
      script: docker run --rm -v `pwd`:/root/NetHack -w /root/NetHack --rm -i centos:8 sh -xe < sys/msdos/ci.sh
    - os: linux
      env: DESCR=linux-xenial-gcc HINTS=linux
      compiler: gcc
      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install"
    - os: linux
      env: DESCR=linux-xenial-clang HINTS=linux
      compiler: clang
      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install"
    - os: linux
      env: DESCR=linux-xenial-gcc-x11 HINTS=linux-x11
      compiler: gcc
      addons:
        apt:
          packages:
            - libx11-dev
            - libxaw7-dev
            - xfonts-utils
      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install"
    - os: linux
      env: DESCR=linux-xenial-gcc-qt5 HINTS=linux-qt5
      compiler: gcc
      addons:
        apt:
          packages:
            - libx11-dev
            - libxaw7-dev
            - xfonts-utils
            - qtbase5-dev
            - qtmultimedia5-dev
            - qtbase5-dev-tools
      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && QT_SELECT=5 make MOC=moc install"
    - os: linux
      env: DESCR=linux-bionic-gcc-x11 HINTS=linux-x11
      dist: bionic
      compiler: gcc
      addons:
        apt:
          packages:
            - libx11-dev
            - libxaw7-dev
            - xfonts-utils
      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install"
    - os: linux
      env: DESCR=linux-xenial-gcc-minimal HINTS=linux-minimal
      compiler: gcc
      script: |
              cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../
              sed -i '/^#define CLIPPING/d'       include/config.h
              sed -i '/^#define COMPRESS/d'       include/config.h
              #sed -i '/^#define DOAGAIN/d'        include/config.h
              sed -i '/^#define DUMPLOG/d'        include/config.h
              #sed -i '/^#define GDBPATH/d'        include/config.h
              #sed -i '/^#define GREPPATH/d'       include/config.h
              sed -i '/^#define INSURANCE/d'      include/config.h
              sed -i '/^#define LOGFILE/d'        include/config.h
              sed -i '/^#define NEWS/d'           include/config.h
              sed -i '/^#define PANICLOG/d'       include/config.h
              #sed -i '/^#define STATUS_HILITES/d' include/config.h
              sed -i '/^#define SYSCF/d'          include/config.h
              sed -i '/^#define USER_SOUNDS/d'    include/config.h
              sed -i '/^#define XLOGFILE/d'       include/config.h

              sed -i '/^#define MAIL/d'           include/unixconf.h
              sed -i '/^#define SHELL/d'          include/unixconf.h
              sed -i '/^#define SUSPEND/d'        include/unixconf.h
              sed -i 's/^#define TEXTCOLOR//'     include/unixconf.h
              make install
              cat dat/options
    - os: windows
      env: DESCR=windows-visualstudio
      language: shell
      script:
        - ./win/win32/vs2017/travisci.sh
    - os: windows
#     install: choco install mingw
      env: DESCR=windows-mingw
      script:
        - export ADD_CURSES=Y
        - export PDCURSES_TOP=../pdcurses
        - cd src
        - cp ../sys/winnt/Makefile.gcc ./Makefile
        - mingw32-make install


  exclude:
#    - os: osx
#      osx_image: xcode10.3
#      env: DESCR=osx-xcode10.3-x11 HINTS=macosx10.14 WANT_WIN_CURSES=1 WANT_WIN_X11=1 USE_XPM=1
#      compiler: clang
#      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install"
    - os: osx
      osx_image: xcode10.2
      env: HINTS=macosx10.14
      compiler: clang
      script: "cd sys/unix/ && sh setup.sh hints/$HINTS && cd ../../ && make install"
#
sudo: false
notifications:
  email:
    recipients:
      - devteam@nethack.org
#
deploy:
  provider: releases
  api_key:
    secure: RhyzqLxP4Y8gxJt4zs/6sQykQ4mNAxF0eq82VbkPPm3vG/+Le4sCI8cBAK1EwBZ5zxvN4WX+A+5mderSnXPFWHouyl7A5hcq/d8WHVu97KPMHCUEds6Y2ixpG+eIC/97HZGy4CL4DHkCmBjZePv9yScEnLYN6RzDKI9u2rZA980NByjIxgoj3Cr8vjB+Mm+iXRICU0PaO7LDvlyz1w9Isue0lNj25oHfIOxuQChTJvgwwe+Kj/EGl991CYlbIKew3usOPLAlk31cImZJLz6MXO5iTWdSngnxp5l9INzm8auKhIOQrZEPWUGFKy266qpBCam1cT4INOxKCyuX8WX2/skmcdNyuiWYiZCtDyr6zCeR34Hx1qnNEfTSski0yzhSowq18ujVAgZV+cUrUJlyw3sDaa/euyqmrKLIhdmMxfHgeUvb2sGGMF80ZP+qzsKs3OKM0KlNF6fcmJnUympeWtu5mZGmfu8iWUyLx0bhRESbxbBvaRJs85fRVsZ/XKCBosDQGTrPguhQbxzz4paTbAj5wbF9jUOl+am99dYDYulo2KILkye03vdd+/t8+DKdfizHhYVq0FBzt2V28Nsa/vnbaGuWBsgWS3xt6jo5r0UCLu+cdy5+ifdhvDeru0QxLjB2QLYcaMDj9GIfDiSexBx1ZEOGYpVGxnMV8tO8qfE=
  file:
    - linux-xenial-gcc-meson-$TRAVIS_COMMIT.tar.gz
    - windows-mingw-meson-cross-$TRAVIS_COMMIT.tar.gz
  skip_cleanup: true
  prerelease: true
  draft: true
  on:
    all_branches: true
  overwrite: true
  name: "Pre-Release build of NetHack 3.6"
  body: "This is an auto generated Pre-Release build of NetHack 3.6"
#
cache: ccache
